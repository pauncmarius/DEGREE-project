// <auto-generated />
using System;
using FCUnirea.Persistance.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace FCUnirea.Persistance.Data.Migrations
{
    [DbContext(typeof(FCUnireaDbContext))]
    [Migration("20250210154013_CreateDatabase2")]
    partial class CreateDatabase2
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.36")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("FCUnirea.Domain.Entities.Comments", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int?>("Comment_NewsId")
                        .IsRequired()
                        .HasColumnType("int")
                        .HasColumnName("NewsId");

                    b.Property<int?>("Comment_UsersId")
                        .IsRequired()
                        .HasColumnType("int")
                        .HasColumnName("UserId");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("CreatedAt");

                    b.Property<string>("Text")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("TEXT")
                        .HasColumnName("Text");

                    b.HasKey("Id");

                    b.HasIndex("Comment_NewsId");

                    b.HasIndex("Comment_UsersId");

                    b.ToTable("Comments");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Comment_NewsId = 1,
                            Comment_UsersId = 1,
                            CreatedAt = new DateTime(2025, 2, 10, 15, 40, 12, 540, DateTimeKind.Utc).AddTicks(8250),
                            Text = "Felicitări echipei!"
                        });
                });

            modelBuilder.Entity("FCUnirea.Domain.Entities.Competitions", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("CompetitionName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("CompetitionName");

                    b.Property<int>("CompetitionType")
                        .HasColumnType("int")
                        .HasColumnName("CompetitionType");

                    b.HasKey("Id");

                    b.ToTable("Competitions");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CompetitionName = "Liga 1",
                            CompetitionType = 0
                        },
                        new
                        {
                            Id = 2,
                            CompetitionName = "Cupa Romaniei",
                            CompetitionType = 1
                        },
                        new
                        {
                            Id = 3,
                            CompetitionName = "Champions League",
                            CompetitionType = 2
                        },
                        new
                        {
                            Id = 4,
                            CompetitionName = "Liga 1 U21",
                            CompetitionType = 0
                        },
                        new
                        {
                            Id = 5,
                            CompetitionName = "Cupa Romaniei U21",
                            CompetitionType = 1
                        },
                        new
                        {
                            Id = 6,
                            CompetitionName = "Champions League U21",
                            CompetitionType = 2
                        },
                        new
                        {
                            Id = 7,
                            CompetitionName = "Liga 1 Tineret",
                            CompetitionType = 0
                        },
                        new
                        {
                            Id = 8,
                            CompetitionName = "Cupa Romaniei Tineret",
                            CompetitionType = 1
                        },
                        new
                        {
                            Id = 9,
                            CompetitionName = "Champions League Tineret",
                            CompetitionType = 2
                        });
                });

            modelBuilder.Entity("FCUnirea.Domain.Entities.Games", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("AwayTeamScore")
                        .HasColumnType("int")
                        .HasColumnName("AwayTeamScore");

                    b.Property<DateTime>("GameDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("GameDate");

                    b.Property<int?>("Game_AwayTeamId")
                        .IsRequired()
                        .HasColumnType("int")
                        .HasColumnName("AwayTeamId");

                    b.Property<int?>("Game_CompetitionsId")
                        .IsRequired()
                        .HasColumnType("int")
                        .HasColumnName("CompetitionId");

                    b.Property<int?>("Game_HomeTeamId")
                        .IsRequired()
                        .HasColumnType("int")
                        .HasColumnName("HomeTeamId");

                    b.Property<int?>("Game_StadiumsId")
                        .IsRequired()
                        .HasColumnType("int")
                        .HasColumnName("StadiumId");

                    b.Property<int>("HomeTeamScore")
                        .HasColumnType("int")
                        .HasColumnName("HomeTeamScore");

                    b.Property<int>("TicketsSold")
                        .HasColumnType("int")
                        .HasColumnName("TicketsSold");

                    b.HasKey("Id");

                    b.HasIndex("Game_AwayTeamId")
                        .IsUnique();

                    b.HasIndex("Game_CompetitionsId");

                    b.HasIndex("Game_HomeTeamId")
                        .IsUnique();

                    b.HasIndex("Game_StadiumsId");

                    b.ToTable("Games");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AwayTeamScore = 1,
                            GameDate = new DateTime(2025, 2, 10, 15, 40, 12, 540, DateTimeKind.Utc).AddTicks(8148),
                            Game_AwayTeamId = 2,
                            Game_CompetitionsId = 1,
                            Game_HomeTeamId = 1,
                            Game_StadiumsId = 1,
                            HomeTeamScore = 2,
                            TicketsSold = 5000
                        });
                });

            modelBuilder.Entity("FCUnirea.Domain.Entities.News", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("CreatedAt");

                    b.Property<int?>("News_UsersId")
                        .IsRequired()
                        .HasColumnType("int")
                        .HasColumnName("UsersId");

                    b.Property<string>("Text")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasColumnName("Text");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("Title");

                    b.HasKey("Id");

                    b.HasIndex("News_UsersId");

                    b.ToTable("News");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2025, 2, 10, 15, 40, 12, 540, DateTimeKind.Utc).AddTicks(8231),
                            News_UsersId = 1,
                            Text = "FC Unirea a câștigat cu 2-1!",
                            Title = "Victorie mare pentru FC Unirea!"
                        });
                });

            modelBuilder.Entity("FCUnirea.Domain.Entities.Players", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("BirthDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("BirthDate");

                    b.Property<string>("PlayerName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("PlayerName");

                    b.Property<int?>("Player_TeamsId")
                        .IsRequired()
                        .HasColumnType("int")
                        .HasColumnName("TeamsId");

                    b.Property<int>("Position")
                        .HasColumnType("int")
                        .HasColumnName("Position");

                    b.HasKey("Id");

                    b.HasIndex("Player_TeamsId");

                    b.ToTable("Players");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            BirthDate = new DateTime(1998, 5, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PlayerName = "Alex Popescu",
                            Player_TeamsId = 1,
                            Position = 0
                        },
                        new
                        {
                            Id = 2,
                            BirthDate = new DateTime(2000, 8, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PlayerName = "Mihai Ionescu",
                            Player_TeamsId = 2,
                            Position = 1
                        });
                });

            modelBuilder.Entity("FCUnirea.Domain.Entities.PlayerStatisticsPerCompetition", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("Assists")
                        .HasColumnType("int")
                        .HasColumnName("Assists");

                    b.Property<int>("Goals")
                        .HasColumnType("int")
                        .HasColumnName("Goals");

                    b.Property<int>("MinutesPlayed")
                        .HasColumnType("int")
                        .HasColumnName("MinutesPlayed");

                    b.Property<int?>("PlayerStatisticsPerCompetition_CompetitionsId")
                        .IsRequired()
                        .HasColumnType("int")
                        .HasColumnName("CompetitionId");

                    b.Property<int?>("PlayerStatisticsPerCompetition_PlayersId")
                        .IsRequired()
                        .HasColumnType("int")
                        .HasColumnName("PlayerId");

                    b.Property<int>("RedCards")
                        .HasColumnType("int")
                        .HasColumnName("RedCards");

                    b.Property<int>("Saves")
                        .HasColumnType("int")
                        .HasColumnName("Saves");

                    b.Property<int>("YellowCards")
                        .HasColumnType("int")
                        .HasColumnName("YellowCards");

                    b.HasKey("Id");

                    b.HasIndex("PlayerStatisticsPerCompetition_CompetitionsId");

                    b.HasIndex("PlayerStatisticsPerCompetition_PlayersId");

                    b.ToTable("PlayerStatisticsPerCompetiton");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Assists = 5,
                            Goals = 10,
                            MinutesPlayed = 1200,
                            PlayerStatisticsPerCompetition_CompetitionsId = 1,
                            PlayerStatisticsPerCompetition_PlayersId = 1,
                            RedCards = 0,
                            Saves = 0,
                            YellowCards = 2
                        });
                });

            modelBuilder.Entity("FCUnirea.Domain.Entities.PlayerStatisticsPerGame", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("Assists")
                        .HasColumnType("int")
                        .HasColumnName("Assists");

                    b.Property<int>("Goals")
                        .HasColumnType("int")
                        .HasColumnName("Goals");

                    b.Property<int>("MinutesPlayed")
                        .HasColumnType("int")
                        .HasColumnName("MinutesPlayed");

                    b.Property<int>("PassesCompleted")
                        .HasColumnType("int")
                        .HasColumnName("PassesCompleted");

                    b.Property<int?>("PlayerStatisticsPerGame_GamesId")
                        .IsRequired()
                        .HasColumnType("int")
                        .HasColumnName("GameId");

                    b.Property<int?>("PlayerStatisticsPerGame_PlayersId")
                        .IsRequired()
                        .HasColumnType("int")
                        .HasColumnName("PlayerId");

                    b.Property<int>("RedCards")
                        .HasColumnType("int")
                        .HasColumnName("RedCards");

                    b.Property<int>("Saves")
                        .HasColumnType("int")
                        .HasColumnName("Saves");

                    b.Property<int>("YellowCards")
                        .HasColumnType("int")
                        .HasColumnName("YellowCards");

                    b.HasKey("Id");

                    b.HasIndex("PlayerStatisticsPerGame_GamesId");

                    b.HasIndex("PlayerStatisticsPerGame_PlayersId");

                    b.ToTable("PlayerStatisticsPerGame");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Assists = 1,
                            Goals = 2,
                            MinutesPlayed = 90,
                            PassesCompleted = 30,
                            PlayerStatisticsPerGame_GamesId = 1,
                            PlayerStatisticsPerGame_PlayersId = 1,
                            RedCards = 0,
                            Saves = 0,
                            YellowCards = 0
                        });
                });

            modelBuilder.Entity("FCUnirea.Domain.Entities.Seats", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<bool>("Reserved")
                        .HasColumnType("bit")
                        .HasColumnName("Reserved");

                    b.Property<string>("SeatName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("SeatName");

                    b.Property<int>("SeatPrice")
                        .HasColumnType("int")
                        .HasColumnName("SeatPrice");

                    b.Property<int>("SeatType")
                        .HasColumnType("int")
                        .HasColumnName("SeatType");

                    b.Property<int?>("Seat_StadiumsId")
                        .IsRequired()
                        .HasColumnType("int")
                        .HasColumnName("StadiumId");

                    b.HasKey("Id");

                    b.HasIndex("Seat_StadiumsId");

                    b.ToTable("Seats");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Reserved = false,
                            SeatName = "A1",
                            SeatPrice = 150,
                            SeatType = 3,
                            Seat_StadiumsId = 1
                        },
                        new
                        {
                            Id = 2,
                            Reserved = false,
                            SeatName = "B2",
                            SeatPrice = 50,
                            SeatType = 0,
                            Seat_StadiumsId = 1
                        });
                });

            modelBuilder.Entity("FCUnirea.Domain.Entities.Stadiums", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("Capacity")
                        .HasColumnType("int")
                        .HasColumnName("Capacity");

                    b.Property<string>("StadiumLocation")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("StadiumLocation");

                    b.Property<string>("StadiumName")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("StadiumName");

                    b.HasKey("Id");

                    b.ToTable("Stadiums");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Capacity = 20000,
                            StadiumLocation = "Odobesti",
                            StadiumName = "Unirea Stadium"
                        },
                        new
                        {
                            Id = 2,
                            Capacity = 2000,
                            StadiumLocation = "Odobesti",
                            StadiumName = "Unirea U21 Stadium"
                        },
                        new
                        {
                            Id = 3,
                            Capacity = 200,
                            StadiumLocation = "Odobesti",
                            StadiumName = "Unirea Youth Stadium"
                        });
                });

            modelBuilder.Entity("FCUnirea.Domain.Entities.Teams", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<bool>("IsInternal")
                        .HasColumnType("bit")
                        .HasColumnName("IsInternal");

                    b.Property<string>("Record")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasColumnName("Record");

                    b.Property<string>("TeamName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("TeamName");

                    b.Property<int>("TeamType")
                        .HasColumnType("int")
                        .HasColumnName("TeamType");

                    b.HasKey("Id");

                    b.ToTable("Teams");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            IsInternal = true,
                            Record = " ",
                            TeamName = "FC Unirea",
                            TeamType = 0
                        },
                        new
                        {
                            Id = 2,
                            IsInternal = true,
                            Record = " ",
                            TeamName = "FC Unirea U21",
                            TeamType = 1
                        },
                        new
                        {
                            Id = 3,
                            IsInternal = true,
                            Record = " ",
                            TeamName = "FC Unirea Youth",
                            TeamType = 2
                        });
                });

            modelBuilder.Entity("FCUnirea.Domain.Entities.TeamStatistics", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("GamesPlayed")
                        .HasColumnType("int")
                        .HasColumnName("GamesPlayed");

                    b.Property<int>("GoalsConceded")
                        .HasColumnType("int")
                        .HasColumnName("GoalsConceded");

                    b.Property<int>("GoalsScored")
                        .HasColumnType("int")
                        .HasColumnName("GoalsScored");

                    b.Property<int?>("TeamStatistics_CompetitionsId")
                        .IsRequired()
                        .HasColumnType("int")
                        .HasColumnName("CompetitionId");

                    b.Property<int?>("TeamsStatistics_TeamsId")
                        .IsRequired()
                        .HasColumnType("int")
                        .HasColumnName("TeamId");

                    b.Property<int>("TotalDraws")
                        .HasColumnType("int")
                        .HasColumnName("TotalDraws");

                    b.Property<int>("TotalLosses")
                        .HasColumnType("int")
                        .HasColumnName("TotalLosses");

                    b.Property<int>("TotalPoints")
                        .HasColumnType("int")
                        .HasColumnName("TotalPoints");

                    b.Property<int>("TotalWins")
                        .HasColumnType("int")
                        .HasColumnName("TotalWins");

                    b.HasKey("Id");

                    b.HasIndex("TeamStatistics_CompetitionsId");

                    b.HasIndex("TeamsStatistics_TeamsId");

                    b.ToTable("TeamStatistics");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            GamesPlayed = 15,
                            GoalsConceded = 15,
                            GoalsScored = 30,
                            TeamStatistics_CompetitionsId = 1,
                            TeamsStatistics_TeamsId = 1,
                            TotalDraws = 3,
                            TotalLosses = 2,
                            TotalPoints = 33,
                            TotalWins = 10
                        });
                });

            modelBuilder.Entity("FCUnirea.Domain.Entities.Tickets", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("DateReservation")
                        .HasColumnType("datetime2")
                        .HasColumnName("DateReservation");

                    b.Property<int?>("Ticket_GamesId")
                        .IsRequired()
                        .HasColumnType("int")
                        .HasColumnName("GameId");

                    b.Property<int?>("Ticket_SeatsId")
                        .IsRequired()
                        .HasColumnType("int")
                        .HasColumnName("SeatId");

                    b.Property<int?>("Ticket_UsersId")
                        .IsRequired()
                        .HasColumnType("int")
                        .HasColumnName("UserId");

                    b.HasKey("Id");

                    b.HasIndex("Ticket_GamesId");

                    b.HasIndex("Ticket_SeatsId")
                        .IsUnique();

                    b.HasIndex("Ticket_UsersId");

                    b.ToTable("Tickets");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DateReservation = new DateTime(2025, 2, 10, 15, 40, 12, 540, DateTimeKind.Utc).AddTicks(8169),
                            Ticket_GamesId = 1,
                            Ticket_SeatsId = 1,
                            Ticket_UsersId = 1
                        });
                });

            modelBuilder.Entity("FCUnirea.Domain.Entities.Users", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("CreatedAt");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("Email");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("FirstName");

                    b.Property<string>("HashedPassword")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("HashedPassword");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("LastName");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("PhoneNumber");

                    b.Property<int>("Role")
                        .HasColumnType("int")
                        .HasColumnName("Role");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("Username");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2025, 2, 10, 15, 40, 12, 540, DateTimeKind.Utc).AddTicks(8040),
                            Email = "admin@fcunirea.com",
                            FirstName = "Admin",
                            HashedPassword = "hashedpassword",
                            LastName = "User",
                            PhoneNumber = "0734567890",
                            Role = 0,
                            Username = "admin"
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTime(2025, 2, 10, 15, 40, 12, 540, DateTimeKind.Utc).AddTicks(8045),
                            Email = "mariuspaun@example.com",
                            FirstName = "Marius",
                            HashedPassword = "hashedpassword",
                            LastName = "Paun",
                            PhoneNumber = "0787654321",
                            Role = 1,
                            Username = "mariuspaun"
                        });
                });

            modelBuilder.Entity("FCUnirea.Domain.Entities.Comments", b =>
                {
                    b.HasOne("FCUnirea.Domain.Entities.News", "Comment_News")
                        .WithMany("News_Comments")
                        .HasForeignKey("Comment_NewsId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("FCUnirea.Domain.Entities.Users", "Comment_User")
                        .WithMany("Users_Comments")
                        .HasForeignKey("Comment_UsersId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Comment_News");

                    b.Navigation("Comment_User");
                });

            modelBuilder.Entity("FCUnirea.Domain.Entities.Games", b =>
                {
                    b.HasOne("FCUnirea.Domain.Entities.Teams", "Game_AwayTeam")
                        .WithOne("Team_AwayTeam")
                        .HasForeignKey("FCUnirea.Domain.Entities.Games", "Game_AwayTeamId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("FCUnirea.Domain.Entities.Competitions", "Game_Competitions")
                        .WithMany("Competitions_Games")
                        .HasForeignKey("Game_CompetitionsId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("FCUnirea.Domain.Entities.Teams", "Game_HomeTeam")
                        .WithOne("Team_HomeTeam")
                        .HasForeignKey("FCUnirea.Domain.Entities.Games", "Game_HomeTeamId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("FCUnirea.Domain.Entities.Stadiums", "Game_Stadiums")
                        .WithMany("Stadiums_Games")
                        .HasForeignKey("Game_StadiumsId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Game_AwayTeam");

                    b.Navigation("Game_Competitions");

                    b.Navigation("Game_HomeTeam");

                    b.Navigation("Game_Stadiums");
                });

            modelBuilder.Entity("FCUnirea.Domain.Entities.News", b =>
                {
                    b.HasOne("FCUnirea.Domain.Entities.Users", "News_Users")
                        .WithMany("Users_News")
                        .HasForeignKey("News_UsersId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("News_Users");
                });

            modelBuilder.Entity("FCUnirea.Domain.Entities.Players", b =>
                {
                    b.HasOne("FCUnirea.Domain.Entities.Teams", "Player_Teams")
                        .WithMany("Teams_Players")
                        .HasForeignKey("Player_TeamsId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Player_Teams");
                });

            modelBuilder.Entity("FCUnirea.Domain.Entities.PlayerStatisticsPerCompetition", b =>
                {
                    b.HasOne("FCUnirea.Domain.Entities.Competitions", "PlayerStatisticsPerCompetition_Competitions")
                        .WithMany("Competitions_PlayerStatisticsPerCompetiton")
                        .HasForeignKey("PlayerStatisticsPerCompetition_CompetitionsId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("FCUnirea.Domain.Entities.Players", "PlayerStatisticsPerCompetition_Players")
                        .WithMany("Players_PlayerStatisticsPerCompetitons")
                        .HasForeignKey("PlayerStatisticsPerCompetition_PlayersId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("PlayerStatisticsPerCompetition_Competitions");

                    b.Navigation("PlayerStatisticsPerCompetition_Players");
                });

            modelBuilder.Entity("FCUnirea.Domain.Entities.PlayerStatisticsPerGame", b =>
                {
                    b.HasOne("FCUnirea.Domain.Entities.Games", "PlayerStatisticsPerGame_Games")
                        .WithMany("Games_PlayerStatisticsPerGame")
                        .HasForeignKey("PlayerStatisticsPerGame_GamesId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("FCUnirea.Domain.Entities.Players", "PlayerStatisticsPerGame_Players")
                        .WithMany("Players_PlayerStatisticsPerGame")
                        .HasForeignKey("PlayerStatisticsPerGame_PlayersId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("PlayerStatisticsPerGame_Games");

                    b.Navigation("PlayerStatisticsPerGame_Players");
                });

            modelBuilder.Entity("FCUnirea.Domain.Entities.Seats", b =>
                {
                    b.HasOne("FCUnirea.Domain.Entities.Stadiums", "Seat_Stadiums")
                        .WithMany("Stadiums_Seats")
                        .HasForeignKey("Seat_StadiumsId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Seat_Stadiums");
                });

            modelBuilder.Entity("FCUnirea.Domain.Entities.TeamStatistics", b =>
                {
                    b.HasOne("FCUnirea.Domain.Entities.Competitions", "TeamStatistics_Competitions")
                        .WithMany("Competitions_TeamStatistics")
                        .HasForeignKey("TeamStatistics_CompetitionsId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("FCUnirea.Domain.Entities.Teams", "TeamsStatistics_Teams")
                        .WithMany("Teams_TeamStatistics")
                        .HasForeignKey("TeamsStatistics_TeamsId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("TeamStatistics_Competitions");

                    b.Navigation("TeamsStatistics_Teams");
                });

            modelBuilder.Entity("FCUnirea.Domain.Entities.Tickets", b =>
                {
                    b.HasOne("FCUnirea.Domain.Entities.Games", "Ticket_Games")
                        .WithMany("Games_Tickets")
                        .HasForeignKey("Ticket_GamesId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("FCUnirea.Domain.Entities.Seats", "Ticket_Seats")
                        .WithOne("Seat_Tickets")
                        .HasForeignKey("FCUnirea.Domain.Entities.Tickets", "Ticket_SeatsId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("FCUnirea.Domain.Entities.Users", "Ticket_Users")
                        .WithMany("Users_Tickets")
                        .HasForeignKey("Ticket_UsersId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Ticket_Games");

                    b.Navigation("Ticket_Seats");

                    b.Navigation("Ticket_Users");
                });

            modelBuilder.Entity("FCUnirea.Domain.Entities.Competitions", b =>
                {
                    b.Navigation("Competitions_Games");

                    b.Navigation("Competitions_PlayerStatisticsPerCompetiton");

                    b.Navigation("Competitions_TeamStatistics");
                });

            modelBuilder.Entity("FCUnirea.Domain.Entities.Games", b =>
                {
                    b.Navigation("Games_PlayerStatisticsPerGame");

                    b.Navigation("Games_Tickets");
                });

            modelBuilder.Entity("FCUnirea.Domain.Entities.News", b =>
                {
                    b.Navigation("News_Comments");
                });

            modelBuilder.Entity("FCUnirea.Domain.Entities.Players", b =>
                {
                    b.Navigation("Players_PlayerStatisticsPerCompetitons");

                    b.Navigation("Players_PlayerStatisticsPerGame");
                });

            modelBuilder.Entity("FCUnirea.Domain.Entities.Seats", b =>
                {
                    b.Navigation("Seat_Tickets");
                });

            modelBuilder.Entity("FCUnirea.Domain.Entities.Stadiums", b =>
                {
                    b.Navigation("Stadiums_Games");

                    b.Navigation("Stadiums_Seats");
                });

            modelBuilder.Entity("FCUnirea.Domain.Entities.Teams", b =>
                {
                    b.Navigation("Team_AwayTeam");

                    b.Navigation("Team_HomeTeam");

                    b.Navigation("Teams_Players");

                    b.Navigation("Teams_TeamStatistics");
                });

            modelBuilder.Entity("FCUnirea.Domain.Entities.Users", b =>
                {
                    b.Navigation("Users_Comments");

                    b.Navigation("Users_News");

                    b.Navigation("Users_Tickets");
                });
#pragma warning restore 612, 618
        }
    }
}
